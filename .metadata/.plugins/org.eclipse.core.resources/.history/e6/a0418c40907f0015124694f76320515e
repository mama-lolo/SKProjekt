package algorythms;

import java.util.concurrent.LinkedBlockingDeque;

import util.DataSet;

public class BubbleSort extends AbstractSortingAlgorythm {
	
	
	public void sort (Comparable[] data) {
		 int n = data.length;
				  do{
				    int newn = 1;
				    for (int i=0; i<n-1; ++i){
				      if (data[i].compareTo(data[i+1])>0){
				        swap(data,i, i+1);
				        newn = i+1;
				      }
				    } 
				    n = newn;
				  } while (n > 1);
	}
	
	public void sort(Comparable[] data,LinkedBlockingDeque<DataSet> progress){
		int n = data.length;
		  do{
			  
		    int newn = 1;
		    DataSet temp = new DataSet(data);
		    for (int i=0; i<n-1; ++i){
		    	temp.changePositions.add(i);
		    	temp.changePositions.add(i+1);
		      if (data[i].compareTo(data[i+1])>0){
		    	  progress.add(temp.clone());
		        swap(data,i, i+1);
		        progress.add(data.clone());
		        newn = i+1;
		      }
		    } 
		    n = newn;
		  } while (n > 1);
	}
	

}
